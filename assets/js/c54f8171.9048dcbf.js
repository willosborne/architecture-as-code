"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[376],{7776:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var a=n(4848),i=n(8453);const s={id:"validate",title:"Validate",sidebar_position:5},o="Validate",r={id:"working-with-calm/validate",title:"Validate",description:"The validate command is used to check if an instantiation conforms to a given CALM pattern. Validation helps ensure that your architecture adheres to best practices and meets the required standards.",source:"@site/docs/working-with-calm/validate.md",sourceDirName:"working-with-calm",slug:"/working-with-calm/validate",permalink:"/working-with-calm/validate",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"validate",title:"Validate",sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Generate",permalink:"/working-with-calm/generate"},next:{title:"Visualize",permalink:"/working-with-calm/visualize"}},d={},l=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Command Options",id:"command-options",level:2},{value:"Example of Validation",id:"example-of-validation",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"validate",children:"Validate"})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"validate"})," command is used to check if an instantiation conforms to a given CALM pattern. Validation helps ensure that your architecture adheres to best practices and meets the required standards."]}),"\n",(0,a.jsx)(t.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,a.jsxs)(t.p,{children:["To validate an instantiation against a pattern, use the ",(0,a.jsx)(t.code,{children:"validate"})," command with the ",(0,a.jsx)(t.code,{children:"--pattern"})," and ",(0,a.jsx)(t.code,{children:"--instantiation"})," options:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"calm validate -p calm/pattern/api-pattern.json -i instantiation.json\n"})}),"\n",(0,a.jsx)(t.p,{children:"If the instantiation does not match the pattern, the command will output a list of errors and warnings that need to be addressed."}),"\n",(0,a.jsx)(t.h2,{id:"command-options",children:"Command Options"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.code,{children:"-p, --pattern <pattern>"})}),": Path to the pattern file. This can be a local file path or a URL."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.code,{children:"-i, --instantiation <instantiation>"})}),": Path to the instantiation file to validate."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.code,{children:"-f, --format <format>"})}),': The format of the output (choices: "json", "junit", default: "json").']}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.code,{children:"-v, --verbose"})}),": Enable verbose logging to see detailed validation output."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"example-of-validation",children:"Example of Validation"}),"\n",(0,a.jsx)(t.p,{children:"Here is an example command that validates an instantiation against a pattern and outputs the results in JSON format:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"calm validate -p calm/pattern/api-pattern.json -i my-architecture.json -f json\n"})}),"\n",(0,a.jsxs)(t.p,{children:["This command will check if ",(0,a.jsx)(t.code,{children:"my-architecture.json"})," conforms to the ",(0,a.jsx)(t.code,{children:"api-pattern.json"})," and display any validation errors or warnings."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var a=n(6540);const i={},s=a.createContext(i);function o(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);