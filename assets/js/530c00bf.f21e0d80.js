"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[864],{4381:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var n=t(4848),s=t(8453);const r={id:"key-features",title:"Key Features",sidebar_position:4},a="Key Features of CALM",o={id:"introduction/key-features",title:"Key Features",description:"CALM is designed to revolutionize how we define, validate, and visualize software architectures. Below are some of the core features that make CALM a powerful tool for modern architects.",source:"@site/docs/introduction/key-features.md",sourceDirName:"introduction",slug:"/introduction/key-features",permalink:"/introduction/key-features",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"key-features",title:"Key Features",sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Why Use CALM?",permalink:"/introduction/why-use-calm"},next:{title:"Core Concepts",permalink:"/core-concepts/"}},c={},d=[{value:"1. Standardized Definitions",id:"1-standardized-definitions",level:2},{value:"2. Validation and Compliance",id:"2-validation-and-compliance",level:2},{value:"3. Visualization",id:"3-visualization",level:2},{value:"4. Patterns and Reuse",id:"4-patterns-and-reuse",level:2},{value:"5. Integration with Existing Tools",id:"5-integration-with-existing-tools",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"key-features-of-calm",children:"Key Features of CALM"})}),"\n",(0,n.jsx)(i.p,{children:"CALM is designed to revolutionize how we define, validate, and visualize software architectures. Below are some of the core features that make CALM a powerful tool for modern architects."}),"\n",(0,n.jsx)(i.h2,{id:"1-standardized-definitions",children:"1. Standardized Definitions"}),"\n",(0,n.jsx)(i.p,{children:"At the heart of CALM is its JSON Meta Schema, which provides a standardized format for describing system architectures. By using CALM, architects can create consistent, machine-readable definitions of their designs, ensuring that all stakeholders have a clear and uniform understanding of the system."}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"JSON-Based"}),": Leveraging JSON for architecture allows for easy integration with other tools and seamless version control."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Extensible Schema"}),": CALM\u2019s schema can be extended and customized, allowing organizations to tailor it to their specific needs while maintaining core compatibility."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"2-validation-and-compliance",children:"2. Validation and Compliance"}),"\n",(0,n.jsx)(i.p,{children:"One of the most powerful aspects of CALM is its ability to validate architectures against predefined patterns. This ensures that designs adhere to best practices and organizational standards."}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Pattern-Based Validation"}),": Use CALM\u2019s CLI to validate instantiations against approved patterns, catching errors early in the design phase."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Automated Compliance Checks"}),": Integrate CALM validation into your CI/CD pipeline to enforce compliance automatically, reducing the burden of manual reviews."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"3-visualization",children:"3. Visualization"}),"\n",(0,n.jsx)(i.p,{children:"Understanding complex architectures can be challenging, especially when dealing with large systems. CALM provides visualization tools that generate intuitive, easy-to-understand diagrams directly from your architectural definitions."}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Instant Diagrams"}),": Use the ",(0,n.jsx)(i.code,{children:"visualize"})," command in CALM CLI to produce SVG files representing your architecture, facilitating discussions and reviews."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Dynamic Views"}),": Switch between different views of the same architecture, highlighting specific relationships or components as needed."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"4-patterns-and-reuse",children:"4. Patterns and Reuse"}),"\n",(0,n.jsx)(i.p,{children:"CALM supports the creation and reuse of architectural patterns, allowing you to encapsulate common designs and quickly instantiate them for specific use cases."}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Reusable Components"}),": Define patterns for common architectural structures, such as microservices, API gateways, or data pipelines."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Pre-Approved Designs"}),": Use pre-approved patterns to speed up development, reduce review times, and ensure consistency across projects."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"5-integration-with-existing-tools",children:"5. Integration with Existing Tools"}),"\n",(0,n.jsx)(i.p,{children:"CALM is designed to work with your existing toolchain, making it easy to adopt without disrupting your current workflows."}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Translators"}),": Convert CALM schemas into other formats like C4 models or Kubernetes manifests, allowing you to maintain compatibility with popular architecture frameworks."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Custom Validation"}),": Extend CALM\u2019s validation capabilities with bespoke rules to meet your specific requirements."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>o});var n=t(6540);const s={},r=n.createContext(s);function a(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);