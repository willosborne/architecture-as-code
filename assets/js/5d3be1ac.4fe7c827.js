"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[277],{3106:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=i(4848),s=i(8453);const o={id:"relationships",title:"Relationships",sidebar_position:4},r="Relationships in CALM",a={id:"core-concepts/relationships",title:"Relationships",description:'Relationships in CALM define how nodes interact, connect, or depend on each other. They are the "arrows" in architectural diagrams that illustrate data flows, control flows, dependencies, and system interactions.',source:"@site/docs/core-concepts/relationships.md",sourceDirName:"core-concepts",slug:"/core-concepts/relationships",permalink:"/core-concepts/relationships",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"relationships",title:"Relationships",sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Interfaces",permalink:"/core-concepts/interfaces"},next:{title:"Metadata",permalink:"/core-concepts/metadata"}},c={},l=[{value:"What is a Relationship?",id:"what-is-a-relationship",level:2},{value:"Key Properties of Relationships",id:"key-properties-of-relationships",level:3},{value:"Example of a Relationship Definition",id:"example-of-a-relationship-definition",level:3},{value:"Using Relationships Effectively",id:"using-relationships-effectively",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"relationships-in-calm",children:"Relationships in CALM"})}),"\n",(0,t.jsx)(n.p,{children:'Relationships in CALM define how nodes interact, connect, or depend on each other. They are the "arrows" in architectural diagrams that illustrate data flows, control flows, dependencies, and system interactions.'}),"\n",(0,t.jsx)(n.h2,{id:"what-is-a-relationship",children:"What is a Relationship?"}),"\n",(0,t.jsx)(n.p,{children:"A relationship links two or more nodes, providing context about how they interact. Relationships can represent data flows, communication paths, control dependencies, or even logical groupings of nodes."}),"\n",(0,t.jsx)(n.h3,{id:"key-properties-of-relationships",children:"Key Properties of Relationships"}),"\n",(0,t.jsx)(n.p,{children:"Relationships in CALM have several properties that capture the nature and specifics of these connections:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"unique-id"}),": A mandatory identifier that uniquely defines the relationship within the architecture."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"relationship-type"}),": Specifies the type of interaction, such as:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"interacts"}),": Defines an interaction between nodes, often representing a direct communication or service call."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"connects"}),": Illustrates a connection between interfaces, such as a network link or API call."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"deployed-in"}),": Indicates deployment relationships, showing where a node is hosted or run."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"composed-of"}),": Describes hierarchical relationships, showing how one node is composed of other sub-nodes."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"description"}),": Provides additional context about the nature of the relationship."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"protocol"}),": Defines the protocol used in the connection, such as HTTP, HTTPS, or WebSocket."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"authentication"}),": Specifies authentication methods, like OAuth2 or Certificate, used to secure the interaction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"controls"}),": Optional policies or constraints that apply to the relationship, such as encryption requirements."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-of-a-relationship-definition",children:"Example of a Relationship Definition"}),"\n",(0,t.jsx)(n.p,{children:"Below is an example of a relationship definition connecting a service to a database:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "unique-id": "rel-001",\n  "description": "Payment Service accesses Payment Database",\n  "relationship-type": {\n    "connects": {\n      "source": {\n        "node": "service-123",\n        "interfaces": ["api-interface"]\n      },\n      "destination": {\n        "node": "database-456",\n        "interfaces": ["db-interface"]\n      }\n    }\n  },\n  "protocol": "HTTPS",\n  "authentication": "OAuth2"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"using-relationships-effectively",children:"Using Relationships Effectively"}),"\n",(0,t.jsx)(n.p,{children:"Relationships are crucial for understanding how your architecture functions as a whole. They allow you to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Map Dependencies"}),": Clearly illustrate how different components rely on one another, helping identify potential bottlenecks or points of failure."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Define Interactions"}),": Specify how data flows between systems, aiding in security assessments and performance evaluations."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Encapsulate Complexity"}),": Use hierarchical relationships to manage complex systems, nesting components where necessary for clarity."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);